package com.openai.api.models

import com.openai.api.core.JsonString
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class FineTuneTest {

    @Test
    fun createFineTune() {
        val fineTune =
            FineTune.builder()
                .id("string")
                .object_("string")
                .createdAt(123L)
                .updatedAt(123L)
                .model("string")
                .fineTunedModel("string")
                .organizationId("string")
                .status("string")
                .hyperparams(JsonString.of("abc"))
                .trainingFiles(
                    listOf(
                        File.builder()
                            .id("string")
                            .object_("string")
                            .bytes(123L)
                            .createdAt(123L)
                            .filename("string")
                            .purpose("string")
                            .status("string")
                            .statusDetails(JsonString.of("abc"))
                            .build()
                    )
                )
                .validationFiles(
                    listOf(
                        File.builder()
                            .id("string")
                            .object_("string")
                            .bytes(123L)
                            .createdAt(123L)
                            .filename("string")
                            .purpose("string")
                            .status("string")
                            .statusDetails(JsonString.of("abc"))
                            .build()
                    )
                )
                .resultFiles(
                    listOf(
                        File.builder()
                            .id("string")
                            .object_("string")
                            .bytes(123L)
                            .createdAt(123L)
                            .filename("string")
                            .purpose("string")
                            .status("string")
                            .statusDetails(JsonString.of("abc"))
                            .build()
                    )
                )
                .events(
                    listOf(
                        FineTune.FineTuneEvent.builder()
                            .object_("string")
                            .createdAt(123L)
                            .level("string")
                            .message("string")
                            .build()
                    )
                )
                .build()
        assertThat(fineTune).isNotNull
        assertThat(fineTune.id()).isEqualTo("string")
        assertThat(fineTune.object_()).isEqualTo("string")
        assertThat(fineTune.createdAt()).isEqualTo(123L)
        assertThat(fineTune.updatedAt()).isEqualTo(123L)
        assertThat(fineTune.model()).isEqualTo("string")
        assertThat(fineTune.fineTunedModel()).contains("string")
        assertThat(fineTune.organizationId()).isEqualTo("string")
        assertThat(fineTune.status()).isEqualTo("string")
        assertThat(fineTune._hyperparams()).isEqualTo(JsonString.of("abc"))
        assertThat(fineTune.trainingFiles())
            .containsExactly(
                File.builder()
                    .id("string")
                    .object_("string")
                    .bytes(123L)
                    .createdAt(123L)
                    .filename("string")
                    .purpose("string")
                    .status("string")
                    .statusDetails(JsonString.of("abc"))
                    .build()
            )
        assertThat(fineTune.validationFiles())
            .containsExactly(
                File.builder()
                    .id("string")
                    .object_("string")
                    .bytes(123L)
                    .createdAt(123L)
                    .filename("string")
                    .purpose("string")
                    .status("string")
                    .statusDetails(JsonString.of("abc"))
                    .build()
            )
        assertThat(fineTune.resultFiles())
            .containsExactly(
                File.builder()
                    .id("string")
                    .object_("string")
                    .bytes(123L)
                    .createdAt(123L)
                    .filename("string")
                    .purpose("string")
                    .status("string")
                    .statusDetails(JsonString.of("abc"))
                    .build()
            )
        assertThat(fineTune.events().get())
            .containsExactly(
                FineTune.FineTuneEvent.builder()
                    .object_("string")
                    .createdAt(123L)
                    .level("string")
                    .message("string")
                    .build()
            )
    }
}
